#!/bin/sh

set -e

if [ $DEBUG ]; then
	set -x
fi

. /etc/default/bsrt

mountroot () {
	sh
	reboot
}

dev_exists () {
	TITLE="Comprobando dispositivos"
	TEXT="Espere..."
	{ while [ ! -e "$1" ]; do
		/bin/sleep 0.1 
		echo $(( ${slumber} / 10 ))
		slumber=$(( ${slumber} + 1 ))
		[ ${slumber} -lt 100 ] || return 1
	done; echo; } | draw gauge
	return 0
}

is_mounted () {
	grep -q -o "^$1 " /etc/mtab
	return $?
}

mount_dev () {
	local opts=$1
	local srcdev=$2
	local mntpt=/mnt/${srcdev##*/}

	if ! dev_exists ${srcdev}; then
		panic "No existe el dispositivo ${srcdev}"
	fi
	
	if ! is_mounted ${srcdev}; then
		mkdir -p ${mntpt}
		mount ${opts:+-o ${opts}} ${srcdev} ${mntpt}
	fi

	echo $mntpt
}

umount_dev () {
	umount $@
}

umount_all () {
	umount -alf || true
}

chroot_dev () {
	local devpt=$1; shift
	local mntpt=$(mount_dev rw $devpt)

	mount -o bind /dev $mntpt/dev/
	chroot $mntpt mount -a
	chroot $mntpt $@
	ERROR=$?
	chroot $mntpt umount -alf > /dev/null
	#umount $mntpt/dev/
	
	return $ERROR
}

cancel_msg () {
	TITLE="Proceso cancelado"
	TEXT="El proceso ha sido cancelado por el usuario, pulse ENTER para reiniciar."
	HEIGHT=5
	WIDTH=50
	draw msgbox
	umount_all
	reboot
}

error_msg () {
	TITLE="Error"
	TEXT="Se ha producido un error. Contacte con su administrador. Pulse ENTER para reiniciar."
	HEIGHT=5
	WIDTH=50
	draw msgbox
	umount_all
	reboot
}

success_msg () {
	TITLE="Fin"
	TEXT=${@:-"Proceso terminado, pulse ENTER para reiniciar."}
	HEIGHT=5
	WIDTH=50
	draw msgbox
	umount_all
	reboot
}

draw () {
	local TYPE=${1:-msgbox}; shift
	case $TYPE in
		gauge|prgbox|programbox)
			read data
			;;
		*)
			if [ ${DEBUG} ]; then
				echo "Pulse ENTER para dibujar la siguiente pantalla..."
				read
			fi
			;;
	esac

	echo ${data} | dialog ${COMMON_OPTS} ${BACKTITLE:+--backtitle "${BACKTITLE}"} --no-collapse --cr-wrap ${TITLE:+--title "${TITLE}"} --${TYPE} "${TEXT}" ${HEIGHT:-0} ${WIDTH:-0} $@
	ERROR=$?
	
	unset TEXT
	unset HEIGHT
	unset WIDTH

	return $ERROR
}

if echo ${ROOTDEV} | grep -q "^UUID="; then
	ROOTDEV=$(blkid -U ${ROOTDEV#UUID=})
fi
if echo ${BACKUPDEV} | grep -q "^UUID="; then
	BACKUPDEV=$(blkid -U ${BACKUPDEV#UUID=})
fi
# Arreglar un fisco
if [ ${BACKUPDEV} == ${ROOTDEV} ]; then
	SNAPSHOTDIR=$(chroot_dev ${ROOTDEV} /bin/sed -n '/^snapshot_root/s/snapshot_root[[:blank:]]*//p' /etc/rsnapshot.conf)
else
	SNAPSHOTDIR="."
fi

